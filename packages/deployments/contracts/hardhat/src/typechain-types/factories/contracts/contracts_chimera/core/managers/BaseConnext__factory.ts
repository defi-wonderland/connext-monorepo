/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  BaseConnext,
  BaseConnextInterface,
} from "../../../../../contracts/contracts_chimera/core/managers/BaseConnext";

const _abi = [
  {
    inputs: [],
    name: "BaseConnext__delayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__getConfig_notRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__handleIncomingAsset_feeOnTransferNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__handleIncomingAsset_nativeAssetNotSupported",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__handleOutgoingAsset_notNative",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__nonReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__nonXCallReentrant_reentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum Role",
        name: "_role",
        type: "uint8",
      },
    ],
    name: "BaseConnext__onlyOwnerOrRole_notOwnerOrRole",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "BaseConnext__whenNotPaused_paused",
    type: "error",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class BaseConnext__factory {
  static readonly abi = _abi;
  static createInterface(): BaseConnextInterface {
    return new utils.Interface(_abi) as BaseConnextInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseConnext {
    return new Contract(address, _abi, signerOrProvider) as BaseConnext;
  }
}
