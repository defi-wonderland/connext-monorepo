version: "3.3"

services:
  graph-node-dev-hub-mainnet:
    container_name: graph-node-dev-hub-mainnet
    image: graphprotocol/graph-node:992121b
    ports:
      - "8010:8000"
      - "8001:8001"
      - "8020:8020"
      - "8030:8030"
      - "8040:8040"
    depends_on:
      - ipfs
      - postgres-dev-hub-mainnet
    environment:
      postgres_host: postgres-dev-hub-mainnet
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "mainnet:${MAINNET_DEVNET_RPC_URL}"
      GRAPH_LOG: info

  postgres-dev-hub-mainnet:
    container_name: postgres-dev-hub-mainnet
    image: postgres
    ports:
      - "5432:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node

  graph-node-dev-spoke-optimism:
    container_name: graph-node-dev-spoke-optimism
    image: graphprotocol/graph-node:992121b
    ports:
      - "9010:8000"
      - "9001:8001"
      - "9020:8020"
      - "9030:8030"
      - "9040:8040"
    depends_on:
      - ipfs
      - postgres-dev-spoke-optimism
    environment:
      postgres_host: postgres-dev-spoke-optimism
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "optimism:${OPTIMISM_DEVNET_RPC_URL}"
      GRAPH_LOG: info

  postgres-dev-spoke-optimism:
    container_name: postgres-dev-spoke-optimism
    image: postgres
    ports:
      - "5433:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node

  graph-node-dev-spoke-gnosis:
    container_name: graph-node-dev-spoke-gnosis
    image: graphprotocol/graph-node:992121b
    ports:
      - "7010:8000"
      - "7001:8001"
      - "7020:8020"
      - "7030:8030"
      - "7040:8040"
    depends_on:
      - ipfs
      - postgres-dev-spoke-gnosis
    environment:
      postgres_host: postgres-dev-spoke-gnosis
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: "ipfs:5001"
      ethereum: "gnosis:${GNOSIS_DEVNET_RPC_URL}"
      GRAPH_LOG: info

  postgres-dev-spoke-gnosis:
    container_name: postgres-dev-spoke-gnosis
    image: postgres
    ports:
      - "5434:5432"
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node

  ipfs:
    container_name: ipfs-test
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - "5001:5001"
