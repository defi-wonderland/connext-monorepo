[
  "constructor(address _owner)",
  "error Conductor_addBypass__cannotBypassConductor()",
  "error Conductor_dequeue__notQueued(bytes32 key)",
  "error Conductor_execute__callFailed()",
  "error Conductor_execute__cannotBypass(bytes4 selector, address target)",
  "error Conductor_execute__notElapsed(bytes32 key)",
  "error Conductor_onlyConductor__notConductor(address sender)",
  "error Conductor_queue__alreadyQueued(bytes32 key)",
  "error Conductor_renounceOwnership__prohibited()",
  "error ProposedOwnable__onlyOwner_notOwner()",
  "error ProposedOwnable__onlyProposed_notProposedOwner()",
  "error ProposedOwnable__ownershipDelayElapsed_delayNotElapsed()",
  "error ProposedOwnable__proposeNewOwner_invalidProposal()",
  "error ProposedOwnable__proposeNewOwner_noOwnershipChange()",
  "error ProposedOwnable__renounceOwnership_invalidProposal()",
  "error ProposedOwnable__renounceOwnership_noProposal()",
  "event BypassAdded(address target, bytes4 selector)",
  "event BypassRemoved(address target, bytes4 selector)",
  "event Dequeued(bytes32 indexed key, bytes[] transactions)",
  "event Executed(bytes32 indexed key, bytes[] transactions)",
  "event OwnershipProposed(address indexed proposedOwner)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Queued(bytes32 indexed key, uint256 elapse, bytes[] transactions)",
  "function acceptProposedOwner()",
  "function addBypass(address _target, bytes4 _selector)",
  "function bypassDelay(bytes32) view returns (bool)",
  "function delay() view returns (uint256)",
  "function dequeue(bytes[] _transactions)",
  "function execute(bytes[] _transactions) payable",
  "function executeWithBypass(bytes[] _transactions) payable",
  "function owner() view returns (address)",
  "function proposals(bytes32) view returns (uint256)",
  "function proposeNewOwner(address newlyProposed)",
  "function proposed() view returns (address)",
  "function proposedTimestamp() view returns (uint256)",
  "function queue(bytes[] _transactions)",
  "function removeBypass(address _target, bytes4 _selector)",
  "function renounceOwnership() view",
  "function renounced() view returns (bool)"
]
