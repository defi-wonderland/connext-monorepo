[
  "error AssetsManager__addAssetId_alreadyAdded()",
  "error AssetsManager__addAssetId_badBurn()",
  "error AssetsManager__addAssetId_badMint()",
  "error AssetsManager__enrollAdoptedAndLocalAssets_emptyCanonical()",
  "error AssetsManager__handle_notTransfer()",
  "error AssetsManager__onlyRemoteRouter_notRemote()",
  "error AssetsManager__onlyReplica_notReplica()",
  "error AssetsManager__reconcile_alreadyReconciled()",
  "error AssetsManager__reconcile_noPortalRouter()",
  "error AssetsManager__removeAssetId_invalidParams()",
  "error AssetsManager__removeAssetId_notAdded()",
  "error AssetsManager__removeAssetId_remainsCustodied()",
  "error AssetsManager__setLiquidityCap_notCanonicalDomain()",
  "error AssetsManager__setupAssetWithDeployedRepresentation_invalidRepresentation()",
  "error AssetsManager__setupAssetWithDeployedRepresentation_onCanonicalDomain()",
  "error AssetsManager__setupAsset_invalidCanonicalConfiguration()",
  "error AssetsManager__setupAsset_representationListed()",
  "error AssetsManager__updateDetails_localNotFound()",
  "error AssetsManager__updateDetails_notApproved()",
  "error AssetsManager__updateDetails_onlyRemote()",
  "error BaseManager__delayElapsed_delayNotElapsed()",
  "error BaseManager__getConfig_notRegistered()",
  "error BaseManager__handleIncomingAsset_feeOnTransferNotSupported()",
  "error BaseManager__handleIncomingAsset_nativeAssetNotSupported()",
  "error BaseManager__handleOutgoingAsset_notNative()",
  "error BaseManager__nonReentrant_reentrantCall()",
  "error BaseManager__nonXCallReentrant_reentrantCall()",
  "error BaseManager__onlyOwnerOrRole_notOwnerOrRole(uint8 _role)",
  "error BaseManager__onlyOwner_notOwner()",
  "error BaseManager__whenNotPaused_paused()",
  "error TypedMemView__assertType_typeAssertionFailed(uint256 actual, uint256 expected)",
  "error TypedMemView__assertValid_validityAssertionFailed()",
  "error TypedMemView__index_indexMoreThan32Bytes()",
  "error TypedMemView__index_overrun(uint256 loc, uint256 len, uint256 index, uint256 slice)",
  "event AssetAdded(bytes32 indexed key, bytes32 indexed canonicalId, uint32 indexed domain, address adoptedAsset, address localAsset, address caller)",
  "event AssetRemoved(bytes32 indexed key, address caller)",
  "event LiquidityCapUpdated(bytes32 indexed key, bytes32 indexed canonicalId, uint32 indexed domain, uint256 cap, address caller)",
  "event Receive(uint64 indexed originAndNonce, address indexed token, address indexed recipient, address liquidityProvider, uint256 amount)",
  "event Reconciled(bytes32 indexed transferId, uint32 indexed originDomain, address indexed local, address[] routers, uint256 amount, address caller)",
  "event TokenDeployed(uint32 indexed domain, bytes32 indexed id, address indexed representation)",
  "function acceptanceDelay() view returns (uint256)",
  "function approvedRelayers(address _relayer) view returns (bool _approved)",
  "function approvedSequencers(address _sequencer) view returns (bool _approved)",
  "function assetCanonicalIds(address _asset) view returns (bytes32 _canonicalId)",
  "function assetIdToTickerHash(address _assetId) view returns (bytes32 _tickerHash)",
  "function domain() view returns (uint32)",
  "function handle(uint32 _origin, uint32 _nonce, bytes32 _sender, bytes _message)",
  "function initialized() view returns (bool)",
  "function maxRoutersPerTransfer() view returns (uint256)",
  "function nextAssetToTickerHash(address _nextAsset) view returns (bytes32 _tickerHash)",
  "function nonce() view returns (uint256)",
  "function owner() view returns (address)",
  "function proposed() view returns (address)",
  "function proposedOwnershipTimestamp() view returns (uint256)",
  "function receiveLocalOverride(bytes32 _transferId) view returns (bool _receives)",
  "function relayerFeeVault() view returns (address)",
  "function remotes(uint32 _domain) view returns (bytes32 _router)",
  "function removeAssetId(tuple(uint32 domain, bytes32 id) _canonical, address _adoptedAssetId, address _representation)",
  "function removeAssetId(bytes32 _key, address _adoptedAssetId, address _representation)",
  "function roles(address _account) view returns (uint8 _role)",
  "function routedTransfers(bytes32 _transferId, uint256) view returns (address _routers)",
  "function routerAllowlistRemoved() view returns (bool)",
  "function routerAllowlistTimestamp() view returns (uint256)",
  "function routerBalances(address _router, address _assetId) view returns (uint256 _amount)",
  "function routerConfigs(address _router) view returns (bool approved, bool portalApproved, address owner, address recipient, address proposed, uint256 proposedTimestamp)",
  "function routerCredits(address _assetId, address _router) view returns (uint256 _amount)",
  "function settlementStrategies(bytes32 _tickerHash, bytes _path) view returns (address _strategy)",
  "function setupAsset(tuple(uint32 domain, bytes32 id) _canonical, uint8 _canonicalDecimals, string _representationName, string _representationSymbol, address _adoptedAssetId, address _stableSwapPool, uint256 _cap) returns (address _local)",
  "function setupAssetWithDeployedRepresentation(tuple(uint32 domain, bytes32 id) _canonical, address _representation, address _adoptedAssetId, address _stableSwapPool) returns (address)",
  "function supportedAssetDomains(bytes32 _tickerHash, uint32 _domain) view returns (bool _supported)",
  "function tickerHashToAssetId(bytes32 _tickerHash) view returns (address _assetId)",
  "function tickerHashToNextAsset(bytes32 _tickerHash) view returns (address _nextAsset)",
  "function tokenConfigs(bytes32 _canonicalId) view returns (address representation, uint8 representationDecimals, address adopted, uint8 adoptedDecimals, address adoptedToLocalExternalPools, bool approval, uint256 cap, uint256 custodied)",
  "function transferStatus(bytes32 _domain) view returns (uint8 _status)",
  "function unclaimedAssets(address _assetId) view returns (uint256 _amount)",
  "function updateDetails(tuple(uint32 domain, bytes32 id) _canonical, string _name, string _symbol)",
  "function updateLiquidityCap(tuple(uint32 domain, bytes32 id) _canonical, uint256 _updated)",
  "function xAppConnectionManager() view returns (address)"
]
