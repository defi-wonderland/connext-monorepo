specVersion: 0.0.4
schema:
  file: ./src/amarok-hub-v0/schema.graphql
dataSources:
  # RootManager.sol events
  - kind: ethereum/contract
    name: RootManager
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: RootManager
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
        - RootManagerMode
      abis:
        - name: RootManager
          file: ./src/amarok-hub-v0/abis/RootManager.json
      eventHandlers:
        - event: RootReceived(uint32,bytes32,uint256)
          handler: handleRootReceived
        - event: AggregateRootPropagated(indexed bytes32,bytes32)
          handler: handleAggregateRootPropagated
        - event: ConnectorAdded(uint32,address,uint32[],address[])
          handler: handleConnectorAdded
        - event: ConnectorRemoved(uint32,address,uint32[],address[],address)
          handler: handleConnectorRemoved
        - event: AggregateRootProposed(indexed uint256,uint256,indexed bytes32,indexed bytes32,bytes32[],uint32[])
          handler: handleAggregateRootProposed
        - event: SlowModeActivated(indexed address)
          handler: handleSlowModeActivated
        - event: OptimisticModeActivated()
          handler: handleOptimisticModeActivated
        - event: AggregateRootSavedOptimistic(indexed bytes32,uint256)
          handler: handleAggregateRootSavedOptimistic
        - event: AggregateRootSavedSlow(indexed bytes32,uint256,bytes32[],uint256)
          handler: handleAggregateRootSavedSlow
        - event: HubDomainSet(uint32)
          handler: handleHubDomainSet
        - event: HubDomainCleared()
          handler: handleHubDomainCleared
      file: ./src/amarok-hub-v0/mapping/rootManager.ts
  # MERKLE TREE MANAGER events
  - kind: ethereum/contract
    name: MerkleTreeManager
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: MerkleTreeManager
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - OriginMessage
        - RootCount
      abis:
        - name: MerkleTreeManager
          file: ./src/amarok-hub-v0/abis/MerkleTreeManager.json
      eventHandlers:
        - event: LeavesInserted(bytes32,uint256,bytes32[])
          handler: handleLeavesInserted
      file: ./src/amarok-hub-v0/mapping/merkleTreeManager.ts
  # PolygonHubConnector.sol events
  - kind: ethereum/contract
    name: PolygonHubConnector
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: PolygonHubConnector
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
      abis:
        - name: PolygonHubConnector
          file: ./src/amarok-hub-v0/abis/PolygonHubConnector.json
      eventHandlers:
        - event: MessageProcessed(bytes,address)
          handler: handlePolygonMessageProcessed
        - event: NewConnector(indexed uint32,indexed uint32,address,address,address)
          handler: handlePolygonNewConnector
      file: ./src/amarok-hub-v0/mapping/polygon.ts
  # OptimismHubConnector.sol events
  - kind: ethereum/contract
    name: OptimismHubConnector
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: OptimismHubConnector
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
      abis:
        - name: OptimismHubConnector
          file: ./src/amarok-hub-v0/abis/OptimismHubConnector.json
      eventHandlers:
        - event: MessageProcessed(bytes,address)
          handler: handleOptimismMessageProcessed
        - event: NewConnector(indexed uint32,indexed uint32,address,address,address)
          handler: handleOptimismNewConnector
      file: ./src/amarok-hub-v0/mapping/optimism.ts
  # GnosisHubConnector.sol events
  - kind: ethereum/contract
    name: GnosisHubConnector
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: GnosisHubConnector
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
      abis:
        - name: GnosisHubConnector
          file: ./src/amarok-hub-v0/abis/GnosisHubConnector.json
      eventHandlers:
        - event: MessageProcessed(bytes,address)
          handler: handleGnosisMessageProcessed
        - event: NewConnector(indexed uint32,indexed uint32,address,address,address)
          handler: handleGnosisNewConnector
      file: ./src/amarok-hub-v0/mapping/gnosis.ts
  # ArbitrumHubConnector.sol events
  - kind: ethereum/contract
    name: ArbitrumHubConnector
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: ArbitrumHubConnector
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
      abis:
        - name: ArbitrumHubConnector
          file: ./src/amarok-hub-v0/abis/ArbitrumHubConnector.json
      eventHandlers:
        - event: MessageProcessed(bytes,address)
          handler: handleArbitrumMessageProcessed
        - event: NewConnector(indexed uint32,indexed uint32,address,address,address)
          handler: handleArbitrumNewConnector
      file: ./src/amarok-hub-v0/mapping/arbitrum.ts
  # BnbHubConnector.sol events
  - kind: ethereum/contract
    name: BnbHubConnector
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: BnbHubConnector
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
      abis:
        - name: BnbHubConnector
          file: ./src/amarok-hub-v0/abis/BnbHubConnector.json
      eventHandlers:
        - event: MessageProcessed(bytes,address)
          handler: handleBnbMessageProcessed
        - event: NewConnector(indexed uint32,indexed uint32,address,address,address)
          handler: handleBnbNewConnector
      file: ./src/amarok-hub-v0/mapping/bnb.ts
  # LineaHubConnector.sol events
  - kind: ethereum/contract
    name: LineaHubConnector
    network: "{{network}}"
    source:
      address: "{{address}}"
      abi: LineaHubConnector
      # prettier-ignore
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.6
      language: wasm/assemblyscript
      entities:
        - Asset
        - AssetBalance
        - Router
        - Transfer
      abis:
        - name: LineaHubConnector
          file: ./src/amarok-hub-v0/abis/LineaHubConnector.json
      eventHandlers:
        - event: MessageProcessed(bytes,address)
          handler: handleLineaMessageProcessed
        - event: NewConnector(indexed uint32,indexed uint32,address,address,address)
          handler: handleLineaNewConnector
      file: ./src/amarok-hub-v0/mapping/linea.ts
